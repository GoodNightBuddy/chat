type Query {
  version: String!
  products: [Product!]!
  messages: [Message!]!
}

input ProductInput {
  title: String!
  price: Float!
}

type Mutation {
  createProduct(product: ProductInput!): Product!
}

type Subscription {
  newProduct: Product!
}

type Product {
  id: ID!
  createdAt: String
  title: String!
  price: Float!
}






input MessageInput {
  text: String!
  user: String!
}

type Mutation {
  createMessage(message: MessageInput!): Message!
}

type Subscription {
  newMessage: Message!
}

type Message {
  id: ID!
  createdAt: String
  text: String!
  comments: [Comment!]
  user: String!
  # user: User
}

type Comment {
  text: String!
  user: User!
  message: Message!

}

type User {
  id: ID!
  comments: [Comment!]!
  messages: [Message!]!
}