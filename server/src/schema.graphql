type Query {
  version: String!
  messages: [Message!]!
  message: Message!

}

input MessageInput {
  text: String!
}

input CommentInput {
  text: String!
  messageId: Int!
}

type Mutation {
  createMessage(message: MessageInput!): Message!
  createComment(comment: CommentInput!): Comment!
}

type Message {
  id: Int!
  createdAt: String!
  text: String!
  likesCount: Int!
  dislikesCount: Int!
  comments: [Comment!]!
}

type Comment {
  id: Int!
  text: String!
  message: Message!
}

type Subscription {
  newMessage: Message!
  newComment: Comment!
}

type Comment {
  text: String!
  message: Message!
}